
package wanminrestaurant;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MERYLL MEDINA
 */
public class MakeReservation extends javax.swing.JFrame {

    /**
     * Creates new form MakeReservation
     */
    public MakeReservation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        RESERVE = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        timeField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        reserveButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        adultField = new javax.swing.JSpinner();
        childrenField = new javax.swing.JSpinner();
        dateField = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        reservationTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        generateButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 153, 51));

        RESERVE.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "RESERVATION DETAILS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semibold", 3, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        RESERVE.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Name:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Date:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Time:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("No. of Adult");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("No. of Children");

        reserveButton.setText("RESERVE");
        reserveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveButtonActionPerformed(evt);
            }
        });

        clearButton.setText("CLEAR");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        adultField.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        adultField.setToolTipText("");

        childrenField.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        javax.swing.GroupLayout RESERVELayout = new javax.swing.GroupLayout(RESERVE);
        RESERVE.setLayout(RESERVELayout);
        RESERVELayout.setHorizontalGroup(
            RESERVELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RESERVELayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(RESERVELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(timeField)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(nameField)
                    .addComponent(jLabel3)
                    .addComponent(reserveButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateField, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                .addGroup(RESERVELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RESERVELayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(RESERVELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(adultField, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                            .addComponent(childrenField))
                        .addGap(17, 17, 17))
                    .addGroup(RESERVELayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(75, Short.MAX_VALUE))))
        );

        RESERVELayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {clearButton, reserveButton});

        RESERVELayout.setVerticalGroup(
            RESERVELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RESERVELayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(RESERVELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RESERVELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adultField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(RESERVELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(RESERVELayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(childrenField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RESERVELayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(RESERVELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reserveButton)
                    .addComponent(clearButton))
                .addGap(29, 29, 29))
        );

        reservationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reservation No.", "Name", "Date", "Time", "No. of Adult", "No. of Children"
            }
        ));
        jScrollPane1.setViewportView(reservationTable);

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 3, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("RESERVATION LIST");

        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        generateButton.setText("GENERATE REPORT");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        backButton.setText("BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("      +1 Adult = Php 500            +1 Child = Php 300");
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel8.setFont(new java.awt.Font("Sylfaen", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Serving you daily from 12:00 PM to 7:00 PM!");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel10.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("WANMIN RESTAURANT");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(backButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(125, 125, 125))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(114, 114, 114))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(RESERVE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(deleteButton)
                                .addGap(95, 95, 95)
                                .addComponent(generateButton)))))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)))
                    .addComponent(jLabel10))
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteButton)
                            .addComponent(generateButton)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(RESERVE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reserveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveButtonActionPerformed
      
            // Sets minimum date
            Calendar minDate = Calendar.getInstance();
            minDate.set(2024,Calendar.MARCH,12);

            // Sets maximum date
            Calendar maxDate = Calendar.getInstance();
            maxDate.set(2024,Calendar.DECEMBER,31);
            
            

            try {
            Date selectedDate = dateField.getDate();
            
            Calendar selectedCalendar = Calendar.getInstance();
            selectedCalendar.setTime(selectedDate);
            
            // Validations
            if(nameField.getText().equals("") || timeField.getText().equals("") || selectedDate == null || childrenField.getValue() == null || adultField.getValue() == null){
                JOptionPane.showMessageDialog(null, "Please fill out all the necessary informations.");}
            
            else if(nameField.getText().matches("^[0-9]*$")) {
                JOptionPane.showMessageDialog(null, "Numbers are not allowed in the name field");}
            
            else if((int)childrenField.getValue()<0) {
                JOptionPane.showMessageDialog(null, "Value provided is not applicable", "Message", JOptionPane.ERROR_MESSAGE);}
                
            else if((int)adultField.getValue()<1) {
                JOptionPane.showMessageDialog(null, "Atleast one adult is required to proceed with the reservation", "Message", JOptionPane.ERROR_MESSAGE);}

            else if(!timeField.getText().matches("^(12:[0-5][0-9] PM|1:[0-5][0-9] PM|2:[0-5][0-9] PM|"
                   + "3:[0-5][0-9] PM|4:[0-5][0-9] PM|5:[0-5][0-9] PM|6:[0-5][0-9] PM|7:[0-5][0-9] PM)$")){
                JOptionPane.showMessageDialog(null, "Reservations can only be made from 12:00 PM - 7:00 PM", "Message", JOptionPane.ERROR_MESSAGE);}

            else if(selectedCalendar.before(minDate) || selectedCalendar.after(maxDate)){
                JOptionPane.showMessageDialog(null, "Please choose a reservation date within the allotted period");}

            else { 
                Vector<Object>rowData = new Vector<>();
                rowData.add(reservationTable.getRowCount()+1);
                
                // Sets date format
                SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy");
                String formattedDate = sdf.format(selectedDate);
                
                
                rowData.add(formattedDate);
                rowData.add(timeField.getText());
                rowData.add(nameField.getText());
                rowData.add(adultField.getValue());
                rowData.add(childrenField.getValue());
                
            
            
            
                DefaultTableModel newTable = (DefaultTableModel)reservationTable.getModel();
                 for (int i = 0; i < newTable.getRowCount(); i++){
            newTable.setValueAt(i + 1, i, 0);}
                 
                // Adds the data to the table
                newTable.addRow(rowData);
                
                // Clears the data input by the user in the field
                    dateField.setDate(null);
                    timeField.setText("");
                    nameField.setText("");
                    adultField.setValue(0);
                    childrenField.setValue(0);
                    
                    JOptionPane.showMessageDialog(null, "Reservation added succesfully!");
}


                
                 


                
                
            
            
                
            
            
          
                
            } catch(Exception e) {
            
            
            
            } 
            
      
    }//GEN-LAST:event_reserveButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int row = reservationTable.getSelectedRow();
        
        // Validations
        if (row < 0){
            JOptionPane.showMessageDialog(null, "No row is selected\nPlease select a row", "Message", JOptionPane.ERROR_MESSAGE);}
       
        else {
        int i = JOptionPane.showConfirmDialog(null,  "Do you really want to delete this?", "Delete?", JOptionPane.YES_NO_OPTION);
            if(i == 1) {
             }
             else if(i == 0) {
        
        // Deletes selected row
        DefaultTableModel newTable = (DefaultTableModel)reservationTable.getModel();
        newTable.removeRow(row);}
        JOptionPane.showMessageDialog(null, "Successfully Deleted");}
         for (int i = 0; i < reservationTable.getRowCount(); i++){
            reservationTable.setValueAt(i + 1, i, 0);}
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // Displays MenuSystem Frame
        MenuSystem menuSystem = new MenuSystem();
         menuSystem.show();
         dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
                    // Clear all field
                    dateField.setDate(null);
                    timeField.setText("");
                    nameField.setText("");
                    adultField.setValue(0);
                    childrenField.setValue(0); 
    }//GEN-LAST:event_clearButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        DefaultTableModel newTable = (DefaultTableModel) reservationTable.getModel();
        Vector<Vector> tableData = newTable.getDataVector();
        
        // Saving the object in a file
        try {
            FileOutputStream file = new FileOutputStream("file.bin");
            ObjectOutputStream output = new ObjectOutputStream(file);
            
            // Method for serialization of object
            output.writeObject(tableData);
            
            output.close();
            file.close();
         
    } catch (Exception ex) {
        ex.printStackTrace();
            
        }
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      try {
          // Obtains data from file
        FileInputStream file = new FileInputStream("file.bin");
        ObjectInputStream input = new ObjectInputStream(file);
        
        //Method for deserialization of objective
        Vector<Vector> tableData = (Vector<Vector>)input.readObject();
        
        input.close();
        file.close();
        
        DefaultTableModel newTable = (DefaultTableModel) reservationTable.getModel();
        for (int i = 0; i < tableData.size(); i++) {
            Vector row = tableData.get(i);
            newTable.addRow(new Object[]{row.get(0), row.get(1), row.get(2), row.get(3), row.get(4), row.get(5)});
        }
        
      } catch (Exception ex) {
          ex.printStackTrace();
      }
        
        

        
    }//GEN-LAST:event_formWindowOpened

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
           try {
            DefaultTableModel model = (DefaultTableModel) reservationTable.getModel();
            
            // Variable declaration
            int totalAdults = 0;
            int totalChildren = 0;
            double grandTotal = 0.0;
            double calculateSubTotal = 0.0;
            
            
            JDialog dialog = new JDialog(this, "Reservation Report", true);
            dialog.setLayout(new BorderLayout());
            
            // Creation of new Table
            JTable reportTable = new JTable();
            DefaultTableModel reportModel = new DefaultTableModel();
            reportModel.setColumnIdentifiers(new String[]{"#", "Date", "Time", "Name", "Adults", "Children", "Subtotal"});
            reportTable.setModel(reportModel);
            
            
            for (int i = 0; i < model.getRowCount(); i++) {
                Vector<Object> rowData = new Vector<>();
                rowData.add(model.getValueAt(i, 0));
                Object dateObject = model.getValueAt(i, 1);
                if (dateObject instanceof Date) {
                    // Format date using SimpleDateFormat
                    SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy");
                    String formattedDate = sdf.format((Date) dateObject);
                    rowData.add(formattedDate); // Add formatted date to rowData
                } else {
                    rowData.add(dateObject != null ? dateObject.toString() : ""); // Handle non-Date objects
                }
                rowData.add(model.getValueAt(i, 2));
                rowData.add(model.getValueAt(i, 3));
                int adults = Integer.parseInt(model.getValueAt(i, 4).toString());
                int children = Integer.parseInt(model.getValueAt(i, 5).toString());
                double subtotal = (adults*500) + (children*300);
                rowData.add(adults);
                rowData.add(children);
                rowData.add(subtotal);
                
                totalAdults += adults;
                totalChildren += children;
                grandTotal += subtotal;
                
                reportModel.addRow(rowData);
            }
            
            // Panel customizations
            JScrollPane scrollPane = new JScrollPane(reportTable);
            dialog.add(scrollPane, BorderLayout.CENTER);
            
            JLabel totalLabel = new JLabel("<html><b>Total Number of Adults:</b> " + totalAdults + "<br><b>Total Number of Children:</b> " + totalChildren + "<br><b>Grand Total:</b> " + grandTotal + "</html>");
            dialog.add(totalLabel, BorderLayout.SOUTH);
            
            dialog.getContentPane().setPreferredSize(new Dimension(900, 510));
            dialog.pack();
            dialog.setLocationRelativeTo(this);
            dialog.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    
    }//GEN-LAST:event_generateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MakeReservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel RESERVE;
    private javax.swing.JSpinner adultField;
    private javax.swing.JButton backButton;
    private javax.swing.JSpinner childrenField;
    private javax.swing.JButton clearButton;
    private com.toedter.calendar.JDateChooser dateField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton generateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameField;
    private javax.swing.JTable reservationTable;
    private javax.swing.JButton reserveButton;
    private javax.swing.JTextField timeField;
    // End of variables declaration//GEN-END:variables
}
